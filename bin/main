#!/usr/bin/env ruby
class Player
  attr_accessor :name, :sign, :num_of_games, :num_of_wins, :num_of_losses

  def initialize(name, sign)
    @name = name
    @sign = sign
    # num_of_games = 0
    # num_of_wins = 0
    # num_of_losses = 0
  end
end

class Game
  attr_accessor :board_ui, :board_logic

  def initialize
    @board_ui = '| 1 | 2 | 3 |
| 4 | 5 | 6 |
| 7 | 8 | 9 |'
    @board_logic = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
  end

  def update_board_ui(board_ui, board_number, user_sign)
    board_ui.gsub(board_number, user_sign)
  end

  def update_board_logic(board_logic, board_number, user_sign)
    board_logic.map! { |array| array.map! { |item| item == board_number ? user_sign : item } }
  end

  def winning_condition(board_logic)
    # check the rows
    board_logic.each do |array|
      return true if array.all?(array[0] == true)
    end

    # check the coulmns
    board_logic.length.times do |i|
      if board_logic[0][i] == board_logic[1][i] &&
         board_logic[1][i] == board_logic[2][i]
        return true
      end
    end

    # check the diagonal
    if (board_logic[0][0] == board_logic[1][1] &&
      board_logic[1][1] == board_logic[2][2]) ||
       (board_logic[0][2] == board_logic[1][1] &&
       board_logic[1][1] == board_logic[2][0])
      return true
    end

    false
  end
end

puts
puts 'Welcome to Tic-Tac-Toe!'
puts
puts 'Enter name for player 1: '
player_one = gets.chomp
player1 = Player.new(player_one, 'x')
puts
puts 'Enter name for player 2: '
player_two = gets.chomp
player2 = Player.new(player_two, 'o')
puts
puts 'The game will start now!'
puts "#{player1.name} will be X & #{player2.name} will be O."
puts 'Game Instructions: Choose a available number to place your move!'
puts 'Have fun!'
players = [player1, player2]
player = players[0]
game_on = true
moves = 0
while moves < 9 && game_on
  puts
  puts board
  puts
  puts "#{player.name} make your move: "
  player_move = gets.chomp.to_s
  puts
  board = update_board(board, player_move, player.sign)
  player = player == players[0] ? players[1] : players[0]

  # puts 'Invalid Input' unless move.to_i.is_a? Integer
  # puts 'You won congrats this is a winning move!'
  # puts 'You draw congrats this is a draw move!'
  # winner = false
  # game_on = false if winner
  puts
  moves += 1
end
